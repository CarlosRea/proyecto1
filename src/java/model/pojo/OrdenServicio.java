package model.pojo;
// Generated 13-ene-2015 9:45:59 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrdenServicio generated by hbm2java
 */
@Entity
@Table(name = "orden_servicio", catalog = "peluqueria"
)
public class OrdenServicio implements java.io.Serializable {

    private Integer idfactura;
    private Cliente cliente;
    private Empleado empleado;
    private Date fechaServicio;
    private BigDecimal comisionEmpleado;
    private Boolean facturado;
    private Date horaServicio;
    private Set<LineaProductoServicio> lineaProductoServicios = new HashSet<>(0);
    private Set<LineaServicio> lineaServicios = new HashSet<>(0);

    public OrdenServicio() {
    }

    public OrdenServicio(Cliente cliente, Empleado empleado, Date fechaServicio, BigDecimal comisionEmpleado, Boolean facturado, Date horaServicio, Set<LineaProductoServicio> lineaProductoServicios, Set<LineaServicio> lineaServicios) {
        this.cliente = cliente;
        this.empleado = empleado;
        this.fechaServicio = fechaServicio;
        this.comisionEmpleado = comisionEmpleado;
        this.facturado = facturado;
        this.horaServicio = horaServicio;
        this.lineaProductoServicios = lineaProductoServicios;
        this.lineaServicios = lineaServicios;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "idfactura", unique = true, nullable = false)
    public Integer getIdfactura() {
        return this.idfactura;
    }

    public void setIdfactura(Integer idfactura) {
        this.idfactura = idfactura;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_cliente_fc")
    @JsonBackReference(value = "cliente-ordenservicios")
    public Cliente getCliente() {
        return this.cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_empleado_fc")
    @JsonBackReference(value = "ordenservicio-empleado")
    public Empleado getEmpleado() {
        return this.empleado;
    }

    public void setEmpleado(Empleado empleado) {
        this.empleado = empleado;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_servicio", length = 10)
    public Date getFechaServicio() {
        return this.fechaServicio;
    }

    public void setFechaServicio(Date fechaServicio) {
        this.fechaServicio = fechaServicio;
    }

    @Column(name = "comision_empleado", precision = 6)
    public BigDecimal getComisionEmpleado() {
        return this.comisionEmpleado;
    }

    public void setComisionEmpleado(BigDecimal comisionEmpleado) {
        this.comisionEmpleado = comisionEmpleado;
    }

    @Column(name = "facturado")
    public Boolean getFacturado() {
        return this.facturado;
    }

    public void setFacturado(Boolean facturado) {
        this.facturado = facturado;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_servicio", length = 8)
    public Date getHoraServicio() {
        return this.horaServicio;
    }

    public void setHoraServicio(Date horaServicio) {
        this.horaServicio = horaServicio;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "ordenServicio")
    @JsonManagedReference(value = "ordenservicio-lineaproductoservicio")
    public Set<LineaProductoServicio> getLineaProductoServicios() {
        return this.lineaProductoServicios;
    }

    public void setLineaProductoServicios(Set<LineaProductoServicio> lineaProductoServicios) {
        this.lineaProductoServicios = lineaProductoServicios;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "ordenServicio")
    @JsonManagedReference(value = "ordenservicio-lineaservicios")
    public Set<LineaServicio> getLineaServicios() {
        return this.lineaServicios;
    }

    public void setLineaServicios(Set<LineaServicio> lineaServicios) {
        this.lineaServicios = lineaServicios;
    }

}
